#!/bin/sh

# DASH Tools to manipulate IPv6 addresses
# Example script

SCRIPT_PATH=$(readlink -f $0)
SCRIPT_PATH=$(dirname ${SCRIPT_PATH})

#echo $SCRIPT_PATH

if [ -f "${SCRIPT_PATH}/libipv6-tools.dash" ]; then
	. ${SCRIPT_PATH}/libipv6-tools.dash
else
	echo "ERROR: Missing ipv6-tools.dash file!"
	exit 1
fi

#echo "1. Check if string is a valid IPv6:"
#for IPv6_TEST in "1abc:02ab::" "1abc::02ab:003a" "1abc::02ab::003a" "1zas:02ab:003a:0004:5abc::" "abzc::" "1:2:3:4:5:6:7:8:9"; do
#	ipv6_check "${IPv6_TEST}"
#	RET=$?
#	if [ $RET -eq 0 ]; then
#		echo "    String ${IPv6_TEST} is a valid IPv6"
#	else
#		case $RET in
#			1)
#				echo "    String ${IPv6_TEST} is an invalid IPv6 format. Found more than one compression delimiter \"::\"!"
#			;;
#			2)
#				echo "    String ${IPv6_TEST} is an invalid IPv6 format. Found more than 8 sub-blocks!"
#			;;
#			3)
#				echo "    String ${IPv6_TEST} is an invalid IPv6 format. Found invalid hexa characters!"
#			;;
#			4)
#				echo "    String ${IPv6_TEST} is an invalid IPv6 format. Found a sub-block with a value greater than 0xFFFF!"
#			;;
#			*)
#				echo "    String ${IPv6_TEST} is an invalid IPv6 format. Unknown error."
#			;;
#		esac
#	fi
#done

# echo
# echo "2. IPv6 uncompress tool:"
# echo "  a. Test IPv6 with compression :: at the end of address"
# #IPv6_TEST="1abc:02ab:003a:0004:5abc::"
# #IPv6_TEST="1abc:02ab::"
# #IPv6_TEST="::"
# #IPv6_TEST="1abc:02ab:003a:0004:5abc:6abc:7abc:8abc:9abc"
# for IPv6_TEST in "1abc:02ab::" "1abc:02ab:003a::" "1abc:02ab:003a:0004::" "1abc:02ab:003a:0004:5abc::" "1abc:02ab:003a:0004:5abc:6abc::" "1abc:02ab:003a:0004:5abc:6abc:7abc::" "1abc:02ab:003a:0004:5abc:6abc:7abc:8abc"; do
# 	ipv6_uncompress "${IPv6_TEST}" "IPv6_TUN_6RD_EXPAND"
# 	echo "    Before ${IPv6_TEST} and after ${IPv6_TUN_6RD_EXPAND}"
# done
# #exit 0
#
# # Check case with :: inside of IPv6
# echo
# echo "  b. Test case of IPv6 with compression :: inside of the address"
# #IPv6_TEST="1abc:02ab:003a:0004:5abc::"
# for IPv6_TEST in "1abc::2abc" "1abc::02ab:003a" "1abc:02ab::003a:4abc" "1abc:02ab::003a:4abc:5abc" "1abc:02ab:003a::4abc:5abc:6abc" "1abc:02ab:003a:0004::5abc:6abc:7abc"; do
# 	ipv6_uncompress "${IPv6_TEST}" "IPv6_TUN_6RD_EXPAND"
# 	echo "    Before ${IPv6_TEST} and after ${IPv6_TUN_6RD_EXPAND}"
# done
# #exit 0
#
# # Check case with :: at the begining of IPv6
# echo
# echo "  c. Test case of IPv6 with compression :: at begining of the address"
# #IPv6_TEST="1abc:02ab:003a:0004:5abc::"
# for IPv6_TEST in "::" "::1" "::1abc:2abc" "::1abc:02ab:003a" "::1abc:02ab:003a:4abc" "::1abc:02ab:003a:4abc:5abc" "::1abc:02ab:003a:4abc:5abc:6abc" "::1abc:02ab:003a:0004:5abc:6abc:7abc"; do
# 	ipv6_uncompress "${IPv6_TEST}" "IPv6_TUN_6RD_EXPAND"
# 	echo "    Before ${IPv6_TEST} and after ${IPv6_TUN_6RD_EXPAND}"
# done
# #exit 0
#
# echo
# echo "3. IPv6 compress tool:"
# #IPv6_TEST="1abc:2abc:0000:0000:0000:0000:0000:aaaa"
# for IPv6_TEST in "0000:0000:0000:0000:0000:0000:0000:0000" "1abc:2abc:0000:0000:0000:0000:0000:0000" "1abc:0000:0000:0000:0000:2abc:0000:0000" "1abc:0000:0000:0000:2abc:0000:0000:0000" "1abc:0000:0000:2abc:0000:0000:0000:0000"; do
# 	if ! ipv6_compression "${IPv6_TEST}" "IPv6_TUN_6RD_COMPRESS"; then
# 		echo "  ipv6_compression for ${IPv6_TEST} failed."
# 	else
# 		echo "  Before ${IPv6_TEST} and after ${IPv6_TUN_6RD_COMPRESS}"
# 	fi
# done
# #exit 0
#
# echo
# echo "4. IPv6 0 leading compression tool:"
# for IPv6_TEST in "0000:0000:0000:0000:0000:0000:0000:0000" "1abc:2abc:0000:0000:0000:0000:0000:0000" "1abc:0000:0000:0000:0000:2abc:0000:0000" "1abc:000::0000:2abc:0000:0000" "1abc:0000:0000:0000:2abc:0000:0000:0000" "1abc:0000:0000:2abc:0000:0000:0000:0000"; do
# 	if ! ipv6_leading_zero_compression "${IPv6_TEST}" "IPv6_TUN_6RD_ZERO_LEADING"; then
# 		echo "  ipv6_leading_zero_compression for ${IPv6_TEST} failed."
# 	else
# 		echo "  Before ${IPv6_TEST} and after ${IPv6_TUN_6RD_ZERO_LEADING}"
# 	fi
# done
#exit 0

echo
echo "5. IPv6 get first address of the subnet:"
# "1abc::8abc/16" "1abc::8abc/17" "1abc::8abc/18" "1abc::8abc/19" "1abc::8abc/20"  "1abc::8abc/21" "1abc::8abc/22" "1abc::8abc/23" "1abc::8abc/24" "1abc::8abc/25" "1abc::8abc/26" "1abc::8abc/27" "1abc::8abc/28" "1abc::8abc/29" "1abc::8abc/30" "1abc::8abc/31" "1abc::8abc/32"
for IPv6_TEST in "1abc:2abc:3abc::8abc/28" "1abc:2abc:3abc:4abc:5abc:6abc:7abc:8abc/32" "1abc:2abc:3abc:4abc:5abc:6abc:7abc:8abc/36" "1abc:2abc:3abc:4abc:5abc:6abc:7abc:8abc/42" "1abc:2abc:3abc:4abc:5abc:6abc:7abc:8abc/48" "1abc:2abc::5abc:6abc:7abc:8abc/48" "1abc:2abc::5abc:6abc:7abc:8abc/128"; do
	ipv6_first_subnet_address "${IPv6_TEST}" "IPv6_FIRST_ADDRESS"
	echo "  The first IPv6 address ${IPv6_TEST} is ${IPv6_FIRST_ADDRESS}"
done
exit 0
